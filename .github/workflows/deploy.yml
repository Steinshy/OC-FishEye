name: Deploy to GitHub Pages

# Trigger configuration
on:
  push:
    branches: [dev, testing]

# Environment variables
env:
  NODE_VERSION: "24"

# Permissions
permissions:
  contents: read
  pages: write
  id-token: write

# Concurrency control
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    name: Build for GitHub Pages
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      # Install dependencies
      - name: Install dependencies
        run: |
          npm cache clean --force
          npm ci --prefer-offline --no-audit || npm install --prefer-offline --no-audit

      # Security scan
      - name: Security scan
        continue-on-error: true
        run: npm audit --audit-level=moderate

      # Minify CSS files
      - name: Minify CSS files
        run: npm run minify

      # Prepare deployment files
      - name: Prepare files
        run: |
          mkdir -p deploy
          cp *.html deploy/ 2>/dev/null || true
          cp -r assets/ deploy/
          [ -f "manifest.json" ] && cp manifest.json deploy/ || [ -f "assets/manifest.json" ] && cp assets/manifest.json deploy/ || true

      # Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: deploy

  # Deploy job
  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
