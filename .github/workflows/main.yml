name: Lint and Format

on:
  push:
    branches:
      - dev
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

env:
  NODE_VERSION: 24

permissions:
  contents: read
  pull-requests: read
  checks: write
  actions: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install
        run: npm ci --prefer-offline --no-audit || npm install --prefer-offline --no-audit

      - name: Format
        continue-on-error: true
        run: npm run format

      - name: Lint
        continue-on-error: true
        run: npm run lint

      - name: Security
        continue-on-error: true
        run: npm audit --audit-level=moderate

  cleanup:
    name: Cleanup Old Runs
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Delete old runs
        uses: actions/github-script@v7
        with:
          script: |
            const days = 30;
            const keepMinimum = 6;
            const cutoffDate = new Date(Date.now() - days * 24 * 60 * 60 * 1000);

            const workflows = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            const runs = workflows.data.workflow_runs
              .filter(run => new Date(run.created_at) < cutoffDate)
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
              .slice(keepMinimum);

            for (const run of runs) {
              console.log(`Deleting run ${run.id} from ${run.created_at}`);
              await github.rest.actions.deleteWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: run.id
              });
            }
