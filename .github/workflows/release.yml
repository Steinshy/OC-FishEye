name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate changelog
        id: changelog
        run: |
          # Install conventional-changelog-cli if not already installed
          npm install -g conventional-changelog-cli
          
          # Generate changelog from conventional commits
          if [ -f "package.json" ]; then
            # For projects with package.json, use conventional-changelog
            changelog=$(npx conventional-changelog --preset angular --output-format json --release-count 0 | jq -r '.[0].body // "No changes"')
          else
            # Fallback for projects without package.json
            changelog=$(git log --oneline --format="* %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | head -50)
          fi
          
          # Escape newlines and quotes for GitHub Actions
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}"
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            ```bash
            # Clone the repository
            git clone https://github.com/${{ github.repository }}.git
            cd ${{ github.repository }}
            
            # Checkout the release
            git checkout ${{ github.ref_name }}
            ```
            
            ## Changelog
            
            This release includes all changes since the previous version. See the commit history for detailed information.
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/markdown

      - name: Comment on Issues
        if: github.event_name == 'push'
        run: |
          # Find issues that reference this release
          git log --oneline --format="%s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | \
          grep -o '#[0-9]*' | sort -u | \
          while read issue; do
            if [ ! -z "$issue" ]; then
              echo "Found issue reference: $issue"
              # Note: GitHub will automatically link issues when they're referenced in commits
            fi
          done
