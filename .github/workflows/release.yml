name: Release

on:
  push:
    tags:
      - "v*"

env:
  NODE_VERSION: "24"

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from conventional commits using local dependencies
          if [ -f "package.json" ]; then
            # For projects with package.json, use conventional-changelog
            changelog=$(npx conventional-changelog --preset angular --output-format json --release-count 0 | jq -r '.[0].body // "No changes"')
          else
            # Fallback for projects without package.json
            changelog=$(git log --oneline --format="* %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | head -50)
          fi

          # Escape newlines and quotes for GitHub Actions
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}"

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        run: |
          # Create release using GitHub CLI
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "## What's Changed

          ${{ steps.changelog.outputs.changelog }}

          ## Installation

          \`\`\`bash
          # Clone the repository
          git clone https://github.com/${{ github.repository }}.git
          cd ${{ github.repository }}

          # Checkout the release
          git checkout ${{ github.ref_name }}
          \`\`\`

          ## Changelog

          This release includes all changes since the previous version. See the commit history for detailed information." \
            --draft=false \
            --prerelease=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        run: |
          # Upload assets using GitHub CLI
          if [ -f "README.md" ]; then
            gh release upload ${{ github.ref_name }} README.md --clobber
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on Issues
        if: github.event_name == 'push'
        run: |
          # Find issues that reference this release
          git log --oneline --format="%s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | \
          grep -o '#[0-9]*' | sort -u | \
          while read issue; do
            if [ ! -z "$issue" ]; then
              echo "Found issue reference: $issue"
              # Note: GitHub will automatically link issues when they're referenced in commits
            fi
          done
