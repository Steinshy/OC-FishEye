import {focusNext as a,focusPrevious as b,} from'./focus.js';export let handlers={createArrowNavigation({elements:A,orientation:d='vertical',onNavigate:_,onActivate:c}){return e=>{let B=d===!0||d==='vertical',C=B?'ArrowDown':'ArrowRight',D=B?'ArrowUp':'ArrowLeft';if(e.key===C||e.key===D){e.preventDefault();e.stopPropagation();let _a=document.activeElement;_?.(e.key===C?a(A,_a):b(A,_a),_a)}else (e.key==='Enter'||e.key===' ')&&(e.preventDefault(),e.stopPropagation(),c?.(document.activeElement))}},createEscapeHandler(_A){return e=>{e.key==='Escape'&&(e.preventDefault(),e.stopPropagation(),_A())}},createActivationHandler(E){return e=>{(e.key==='Enter'||e.key===' ')&&(e.preventDefault(),e.stopPropagation(),E?.(document.activeElement))}},createKeyMapHandler({keyMap:aA,shouldPreventDefault:_c=!0,condition:_b}){return e=>{if(_b&&!_b())return;if(aA[e.key]){_c&&e.preventDefault();aA[e.key](e)}}}},events={createClickHandler(aG,{preventDefault:_B=!0,stopPropagation:_C=!0}={}){return e=>{_B&&e.preventDefault();_C&&e.stopPropagation();aG(e)}},attachClickAndKeyboard(aH,aI,aJ={}){if(!aH)return;aH.addEventListener('click',events.createClickHandler(aI,aJ));aH.addEventListener('keydown',handlers.createActivationHandler(aI))},createEventManager(aK){let aL=new Map;return{attach(){for(const{element:aM,event:aN,handler:aO,options:_d} of aK){if(!aM)continue;aM.addEventListener(aN,aO,_d);!aL.has(aM)&&aL.set(aM,[]);aL.get(aM).push({event:aN,handler:aO,options:_d})}},detach(){for(const[aP,aQ] of aL.entries())for(const{event:aR,handler:aS,options:aT} of aQ)aP.removeEventListener(aR,aS,aT);aL.clear()}}}};export let media={createVideoToggleHandler(aB){return ()=>{let aC=aB();aC&&(aC.paused?aC.play():aC.pause())}},pauseVideo(aD){(aD&&!aD.paused)&&aD.pause()},playVideo(aE){aE?.paused&&aE.play()},isPlaying(aF){return aF&&!aF.paused}};