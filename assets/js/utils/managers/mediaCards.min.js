import {getPageElements as a,media as b,} from'../../config.js';import {generateCard as c} from'../../photographer/generate/generateCard.js';import {generateMedia as d} from'../../photographer/generate/generateMedia.js';import {setupCardAccessibility as e} from'../accessibility/mediaCard.js';import {getSafeDuration as f} from'./animation.js';import {openLightbox as g} from'./lightbox.js';import {incrementLike as h} from'./stats.js';export let updateMediasOrder=async A=>{const{mainMedias:_}=a();if(!_||!i(A))return;let B=_.querySelectorAll(b.card);if(!B.length)return;for(const C of B)C.classList.add('sorting');await new Promise(_a=>setTimeout(_a,f(200)));let D=new Map;for(const _A of B){let id=_A.getAttribute('data-media-id');id&&D.set(id,_A)}for(const E of A){let aA=D.get(`${E.id}`);aA&&(aA.classList.remove('sorting'),_.appendChild(aA))}},{isArray:i}=Array;export let renderMediasCards=aB=>{const{mainMedias:_b}=a();if(!_b||!i(aB))return;_b.innerHTML='';for(const aC of aB){let aD=d(aC);if(aD){let aE=c(aC,aD);e(aE,aC,aF=>g(aF.id,aB),h);_b.appendChild(aE)}}};