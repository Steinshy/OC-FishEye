import {getModalRefs as a,getFormElements as b,formFieldNames as c,} from'../../config.js';import {forEachFormField as d,toggleScroll as e,} from'../../helpers/helper.js';import {aria as f} from'../accessibility/aria.js';import {setupFocusCycle as g,cleanupFocusCycle as h,toggleBackgroundContent as i,blurActive as j,} from'../accessibility/focus.js';import {mobileKeyboard as k} from'../accessibility/mobile.js';import {initializeModalAccessibility as l} from'../accessibility/modal.js';import {errorDisplay as m} from'../errorHandler.js';import {getSafeDuration as n} from'./animation.js';import {resetCharacterCount as o,addCharacterCountListeners as p,removeCharacterCountListeners as q,} from'./characterCount.js';import {submitForm as r} from'./submission.js';import {submitButtonState as s} from'./submitButtonState.js';import {setupFieldValidation as t} from'./validation.js';let u=()=>d(b(),c,A=>{A.value='';A.classList.remove('success','warning','danger');A.disabled=!1;A.dataset.valid=A.dataset.errorVisible='false'}),v=()=>requestAnimationFrame(()=>{const{contactForm:_,contactModal:B}=b();_?.reset();B?.classList.remove('show');u();m.resetErrorVisibility();o()}),w=C=>{const{mainModal:_b,form:_c,submitButton:D}=a(),E=C?'add':'remove';_b?.classList[E]('show');_c?.classList[E]('show');f.setHidden(_b,!C);f.setHidden(_c,!C);f.setHidden(D,!C)},closeModal=async ()=>{const{mainModal:_A}=a();if(!_A)return;_A.classList.add('closing');await new Promise(aA=>setTimeout(aA,n(200)));h(_A);e(!1);i(!1);k.resetModalPosition();w(!1);_A.classList.remove('closing');v();j();q()},setupModalEventListeners=(aB='')=>l({photographerName:aB,onOpen:openModal,onClose:closeModal,onSubmit:r,onValidation:t});export let openModal=()=>{const{mainModal:_a}=a();w(!0);e(!0);i(!0);k.resetModalPosition();s.hide();u();o();p();setTimeout(()=>g(_a,b().firstname),n(250))};export let isModalOpen=()=>!!a().mainModal?.classList?.contains('show');