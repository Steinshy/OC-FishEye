import {formFieldNames as a,getFormElements as b,} from'../../config.js';import {sanitizeAndValidate as c,validateEmail as d,validate as e,getFormValues as f,forEachFormField as g,} from'../../helpers/helper.js';import {errorDisplay as h} from'../errorHandler.js';import {submitButtonState as i} from'./submitButtonState.js';let j={firstname:A=>c(A,v=>v.length>=2),lastname:_=>c(_,v=>v.length>=2),email:d,message:B=>c(B,v=>v.length>0&&v.length<=500)},submitValidation=()=>{let _a=b();if(e(j,f(_a)))return!0;let D=!1;g(_a,a,(_A,_B)=>{!validateFields(_B,_A.value)&&(h.toggleError(_B,!0),D=!0)});return!D},n=()=>a.every(aB=>b()[aB]&&validateFields(aB,b()[aB].value.trim()))?i.show():i.hide(),o=(aC,aD)=>{if(!aC)return;let _C=aC.value.trim(),_d=validateFields(aD,_C),_e=!_d;m(aC,!!_C,_d);h?.toggleError(aD,_e);n()};export let validateFields=(C,_b)=>e(j,C,_b);let m=(E,aA,_c)=>{if(!E)return;E.dataset.errorVisible=aA&&!_c;E.dataset.valid=aA&&_c;E.classList.remove('success','warning','danger');aA&&E.classList.add(_c?'success':'danger')};export let setupFieldValidation=({element:aE,name:aF})=>{if(!aE)return;const aG=()=>o(aE,aF);aE.addEventListener('input',aG);aE.addEventListener('blur',aG);aE.addEventListener('focus',()=>{aE.dataset.valid==='true'&&(aE.dataset.errorVisible='false')})};