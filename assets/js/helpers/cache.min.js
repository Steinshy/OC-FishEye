let a=new Map;let b={getStore(A){!a.has(A)&&a.set(A,new Map);return a.get(A)},has(_,B){return this.getStore(_).has(`${B}`)},get(C,_b){return this.getStore(C).get(`${_b}`)},set(_a,d,_c){this.getStore(_a).set(`${d}`,_c)}},c=(D,_B)=>(D<0?_B-1:D>=_B?0:D);export let mediaCache={getOrCreate(_A,e,_C,_d=!1){if(b.has(_A,e)){let aA=b.get(_A,e);return _d&&aA?.cloneNode?aA.cloneNode(!0):aA}let E=_C();E&&b.set(_A,e,E);return E},preloadAdjacent(aB,aC,aD,_D,_e=item=>item.id){if(!aC?.length)return;for(const aE of [c(aD-1,aC.length),c(aD+1,aC.length)]){let aF=aC[aE];aF&&this.getOrCreate(aB,_e(aF),()=>_D(aF))}}};